extends layout

block content
  .container
    h1= title

    if (toShow == null)
      h2 No instance to update details
    else
      - let widgetid = toShow._id
      - let name = toShow.name
      - let description = toShow.description
      - let price = toShow.price

      .row.mb-2
        .col-12
          .border.p-3
            .mr-1 ID is
            div #{widgetid}

      - let actionid = "/resource/widget/" + widgetid
      form#widgetForm.border.p-3(style='margin-top: 20px;', action=actionid, method="PUT")
        .form-group
          label.widgetAttr(for='name') Widget Name
          input#name.form-control(type='text', name='name', value=name)
        .form-group
          label.widgetAttr(for='description') Widget Description
          input#description.form-control(type='text', name='description', value=description)
        .form-group
          label.widgetAttr(for='price') Price
          input#price.form-control(type='number', name='price', value=price)
        .form-group
          input.btn.btn-primary(type='submit')

      script.
        document.forms['widgetForm'].addEventListener('submit', async (event) => {
          event.preventDefault();

          try {
            // Show the user that the form is being submitted
            alert("Saving...");

            const formData = new FormData(event.target);
            const response = await fetch(event.target.action, {
              method: 'PUT',
              body: new URLSearchParams(formData),
            });

            if (!response.ok) {
              throw new Error(`Save failed with status: ${response.status}`);
            }

            const responseBody = await response.text();
            // TODO: Handle the response body as needed
            alert("Save succeeded");

          } catch (error) {
            // Handle error
            console.error("Save failed", error);
            alert("Save failed: " + error.message);
          }
        });
